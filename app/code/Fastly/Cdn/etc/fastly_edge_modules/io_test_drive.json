{
    "description": "Allows you to test drive Image optimization on your site without turning it on for all users. You can also use it to test drive specific quality level of images. Creates a special URL which will set a special cookie which turns on IO with selected quality settings only for you.",
    "id": "io_test_drive",
    "name": "Test Drive Image Optimization",
    "properties": [
        {
            "default": "/.fastly-test-drive",
            "description": "This is the URL that will be exposed on your domain for enabling test drive e.g. https://www.domain.com/.fastly-test-drive. Once is you enable this module go to the URL to enable it for yourself.",
            "label": "Incoming URL path",
            "name": "setupURL",
            "required": true,
            "type": "string"
        }
    ],
    "test": {
        "origins": [
            "https://httpbin.org"
        ],
        "reqUrl": "/sourcePath"
    },
    "vcl": [
        {
            "template": "if (fastly.ff.visits_this_service == 0 && req.http.Fastly-IO-Test && !req.http.overlay-percent ) {\n\n  if ( resp.http.fastly-io-warning ) {\n    set req.http.overlay-percent = \"0\";\n    restart;\n  } else if (resp.http.fastly-io-info) {\n    if ( resp.http.fastly-io-info ~ \"ifsz=(\\d+).+ ofsz=(\\d+)\") {\n      declare local var.ifsz INTEGER;\n      declare local var.ofsz INTEGER;\n      set var.ifsz = std.atoi(re.group.1);\n      set var.ofsz = std.atoi(re.group.2);\n      declare local var.difference INTEGER;\n      set var.difference =  var.ifsz;\n      set var.difference -= var.ofsz;\n      set var.difference *=  100;\n      set var.difference /= var.ifsz;\n      set req.http.overlay-percent = var.difference;\n      restart;\n    }\n  }\n\n}\n\n\nif ( fastly.ff.visits_this_service == 0 && req.http.overlay-percent ) {\n  set resp.http.overlay-percent = req.http.overlay-percent;\n}\n\nif (fastly.ff.visits_this_service == 0 && req.http.Fastly-IO-Test && resp.http.fastly-io-info ) {\n  set resp.http.Cache-Control = \"max-age=0\";\n}",
            "type": "deliver"
        },
        {
            "template": "# Sets up synthetic responses\nif ( req.url.path == \"{{setupURL}}\" ) {\n  if ( req.url.qs == \"\" ) {\n    error 798;\n  } else {\n    set req.url = querystring.filter_except(req.url, \"quality\" + querystring.filtersep() + \"bgcolor\");\n    error 799;\n  }\n}\n\n# Enable IO only for users with the Fastly-IO-Test cookie\nif ( (req.http.fastly-io-test || req.http.Cookie:fastly-io-test ) && req.url.ext ~ \"(?i)^(gif|png|jpg|jpeg|webp)$\") {\n\n  set req.http.X-Fastly-Imageopto-Api = \"fastly\";\n\n  if ( !req.http.fastly-io-test ) {\n    set req.http.fastly-io-test = req.http.Cookie:fastly-io-test;\n  }\n    set req.url = querystring.set(req.url, \"auto\", \"webp\") + \"&\" + req.http.fastly-io-test;\n  \n}\n\nif ( req.http.fastly-io-test&& req.http.overlay-percent   ) {\n  set req.http.Fastly-Force-Shield = \"1\";  \n  declare local var.percent_url STRING;\n  set var.percent_url = \"/fastly-overlays/percent-overlay/\" req.http.overlay-percent;\n  set req.url = querystring.add(req.url, \"overlay\", var.percent_url);\n  set req.http.X-fastly-imageopto-overlay = \"overlay-align=bottom&overlay=\" var.percent_url;\n}",
            "type": "recv"
        },
        {
            "template": "  if (obj.status == 798 ) {\n    set obj.http.Content-Type = \"text/html; charset=utf-8\";\n    set obj.status = 200;\n    synthetic {\"<HTML>\n      <HEAD>\n      <TITLE>Image Optimization Test</TITLE>\n      <link rel='stylesheet' href='https://unpkg.com/purecss@1.0.0/build/pure-min.css'>       <META HTTP-EQUIV='Content-Type' CONTENT='text/html;'>\n      </HEAD>\n      <BODY>\n      <form>\n        Enter the quality level you want to test. This will set a cookie that will\n        allow you to test the site with the said quality level. If you want to try a different\n        quality level come back to this page. Also best used in Incognito or Private Window mod\n        <p>\n        <h2>Quality level 0-100 <input name=quality size=3></h2>\n        <input type=submit>\n      </form>\n      </BODY>\n      </HTML>\"};\n      return (deliver);\n  }\n  \n  if (obj.status == 799 ) {\n    set obj.http.Content-Type = \"text/html; charset=utf-8\";\n    set obj.http.Set-Cookie = \"fastly-io-test=\" req.url.qs \"; Max-Age=3600; path=/; HttpOnly\";\n    set obj.status = 200;\n    synthetic {\"Cookie has been set for 1 hour. Please browse the site as you normally would.\"};\n    return (deliver);\n  }",
            "type": "error"
        },
        {
            "template": " backend F_fastly_overlays {\n    .between_bytes_timeout = 10s;\n    .connect_timeout = 1s;\n    .dynamic = true;\n    .first_byte_timeout = 15s;\n    .host = \"overlays.global.ssl.fastly.net\";\n    .max_connections = 200;\n    .port = \"443\";\n    .host_header = \"overlays.global.ssl.fastly.net\";\n    .always_use_host_header = true;\n    .share_key = \"FASTLYOVERLAYSBACKEND\";\n    .ssl = true;\n    .ssl_cert_hostname = \"overlays.global.ssl.fastly.net\";\n    .ssl_check_cert = always;\n    .ssl_sni_hostname = \"overlays.global.ssl.fastly.net\";\n    .probe = {\n        .dummy = true;\n        .initial = 5;\n        .request = \"HEAD / HTTP/1.1\"  \"Host: overlays.global.ssl.fastly.net\" \"Connection: close\";\n        .threshold = 1;\n        .timeout = 2s;\n        .window = 5;\n      }\n}",
            "type": "init"
        },
        {
            "template": "if ( req.url.path ~ \"^/fastly-overlays/\" ) {\n  set req.backend = F_fastly_overlays;\n  set bereq.http.host = \"overlays.global.ssl.fastly.net\";\n}",
            "type": "miss"
        }
    ],
    "version": 1
}
